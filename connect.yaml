input:
  kafka:
    addresses:
      - redpanda:9092
    topics:
      - user-interactions
    consumer_group: connect-clickhouse-consumer
    checkpoint_limit: 1000
    batching:
      count: 100
      period: 1s

pipeline:
  processors:
    - mapping: |
        # Parse JSON content if it's not already parsed
        let data = if content().type() == "string" { content().parse_json() } else { content() }
        
        # Add timestamp in ClickHouse format
        root = data
        root.click_timestamp = this.timestamp.number().format_timestamp("2006-01-02 15:04:05")
        
        # Convert nulls to appropriate defaults
        if this.session_id == null { root.session_id = "" }
        if this.device_info == null { root.device_info = "{}" }
        if this.geo_location == null { root.geo_location = "{}" }
        if this.playback_quality == null { root.playback_quality = "" }
        
        # Ensure boolean fields are explicitly false if null
        if this.is_autoplay == null { root.is_autoplay = false }
        if this.is_fullscreen == null { root.is_fullscreen = false }
        if this.is_liked == null { root.is_liked = false }
        
        # Determine which table to write to based on event_type
        meta event_table = if this.event_type == "video_watch" {
          "video_watch_events"
        } else if this.event_type == "video_like" {
          "video_like_events"
        } else if this.event_type == "video_comment" {
          "video_comment_events"
        } else if this.event_type == "video_skip" {
          "video_skip_events"
        } else {
          "unknown_events"
        }

output:
  sql:
    driver: clickhouse
    data_source_name: "clickhouse://clickhouse:9000?database=default&username=default"
    query: "INSERT INTO ${! meta(\"event_table\") } (event_id, user_id, video_id, timestamp, click_timestamp, event_type, session_id, device_info, geo_location) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)"
    args_mapping: |
      root = [
        this.event_id,
        this.user_id,
        this.video_id,
        this.timestamp,
        this.click_timestamp,
        this.event_type,
        this.session_id,
        this.device_info,
        this.geo_location
      ]
    max_in_flight: 64
    batching:
      count: 100
      period: 1s